<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.wxd</groupId>
    <artifactId>oa</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>oa-domain</module>
        <module>oa-jpa</module>
        <module>oa-api</module>
        <module>oa-engine</module>
    </modules>
    <packaging>pom</packaging>

    <name>oa</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <hibernate.versioin>4.3.10.Final</hibernate.versioin>
       <!-- <hibernate.jpa.version>1.0.0.Final</hibernate.jpa.version>-->
        <springframework.version>4.1.6.RELEASE</springframework.version>
        <slf4j.version>1.7.10</slf4j.version>
        <aspectj.spring.version>1.6.12</aspectj.spring.version>
        <connection.pool.version>0.8.0.RELEASE</connection.pool.version>
        <mysql.version>5.1.35</mysql.version>
        <junit.version>4.12</junit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- mysql start -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- mysql end -->

            <!-- hibernate start -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.versioin}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.versioin}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate.jpa.version}</version>
            </dependency>-->
            <!-- hibernate end -->

            <!-- logger start-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- logger end-->

            <!-- spring start -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- spring end -->

            <!-- BoneCPDataSource connnectioin pool start -->
            <dependency>
                <groupId>com.jolbox</groupId>
                <artifactId>bonecp</artifactId>
                <version>${connection.pool.version}</version>
            </dependency>
            <!-- BoneCPDataSource connnectioin pool end -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <db.type>mysql</db.type>
                <db.port>3306</db.port>
                <dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>

                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>${mysql.version}</jdbc.version>

                <jdbc.dialect>MYSQL</jdbc.dialect>
                <jdbc.showSql>true</jdbc.showSql>
                <jdbc.ddl>update</jdbc.ddl>

                <jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
                <jdbc.url>
                    <![CDATA[jdbc:mysql://127.0.0.1:3306/oa?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]>
                </jdbc.url>
                <jdbc.username>root</jdbc.username>
                <jdbc.password>root</jdbc.password>
            </properties>
        </profile>
    </profiles>
    <build>
        <!-- 配置通过profile指定数据库配置，而不需要properties文件 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
</project>
